#N canvas 25 23 1723 916 10;
#X msg 53 169 close;
#X obj 45 8 cnv 15 440 60 empty empty empty 20 12 0 14 -200075 -66577
0;
#X msg 44 142 devices;
#X floatatom 104 150 5 0 0 0 - - -;
#X msg 104 169 open \$1;
#X obj 44 256 s;
#X obj 44 234 serial_print any;
#X text 46 88 Requires [comport] object \; install under Help > Find
Externals, f 72;
#X text 52 16 [serial_print]: abstraction that works with Arduinos'
Serial.print() and Serial.println() functions (with the use of [comport]).
It was written by Alexandros Drymonitis. \; See https://github.com/alexdrymonitis/Arduino_Pd
;
#X floatatom 268 221 5 0 0 0 - - -;
#X symbolatom 137 255 20 0 0 0 - - -;
#X obj 268 148 r count:;
#X obj 478 155 r pressed:;
#X obj 478 204 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X floatatom 338 221 5 0 0 0 - - -;
#X obj 338 148 r difference:;
#X obj 430 301 select 1 -1;
#X obj 430 333 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 461 333 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 390 563 f;
#X floatatom 378 500 5 0 0 0 - - -;
#X obj 378 519 clip 0 255;
#X obj 82 525 t b b b;
#X text 376 481 out 2;
#X obj 82 459 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 250 597 s rgb;
#X obj 2 141 r rgb;
#X text 80 444 send rgb values;
#X obj 241 408 hsl 128 15 0 255 0 0 empty empty empty -2 -8 0 10 -258113
-1 -1 0 1;
#X obj 311 427 hsl 128 15 0 255 0 0 empty empty empty -2 -8 0 10 -4034
-1 -1 0 1;
#X obj 381 448 hsl 128 15 0 255 0 0 empty empty empty -2 -8 0 10 -4160
-1 -1 0 1;
#X obj 378 539 t b f;
#X obj 320 563 f;
#X floatatom 308 500 5 0 0 0 - - -;
#X obj 308 519 clip 0 255;
#X obj 308 539 t b f;
#X obj 250 563 f;
#X floatatom 238 500 5 0 0 0 - - -;
#X obj 238 519 clip 0 255;
#X obj 238 539 t b f;
#X text 306 481 out 1;
#X text 236 481 out 0;
#X obj 269 276 % 20;
#X floatatom 269 317 5 0 0 0 - - -;
#X floatatom 414 777 5 0 0 0 - - -;
#X floatatom 506 777 5 0 0 0 - - -;
#X obj 612 705 r button:;
#X floatatom 612 759 5 0 0 0 - - -;
#X floatatom 81 850 5 0 0 0 - - -;
#X obj 81 777 r proximity:;
#X floatatom 173 850 5 0 0 0 - - -;
#X obj 173 777 r ambientlight:;
#X floatatom 284 851 5 0 0 0 - - -;
#X obj 284 778 r whitelight:;
#X obj 414 704 r jx:;
#X obj 506 704 r jy:;
#X floatatom 109 718 5 0 0 0 - - -;
#X floatatom 201 718 5 0 0 0 - - -;
#X floatatom 312 719 5 0 0 0 - - -;
#X obj 110 645 r x:;
#X obj 201 645 r y:;
#X obj 312 646 r z:;
#X obj 82 492 bangfilter 100;
#X obj 804 155 r analog_values:;
#X obj 804 184 unpack f f f f;
#X floatatom 804 231 5 0 0 0 - - -;
#X floatatom 841 232 5 0 0 0 - - -;
#X floatatom 878 232 5 0 0 0 - - -;
#X floatatom 915 232 5 0 0 0 - - -;
#X obj 632 187 unpack f f f f;
#X floatatom 632 234 5 0 0 0 - - -;
#X floatatom 669 235 5 0 0 0 - - -;
#X floatatom 706 235 5 0 0 0 - - -;
#X floatatom 743 235 5 0 0 0 - - -;
#X obj 632 158 r digital_values:;
#X msg 165 169 open 4;
#X obj 44 212 comport 1 9600;
#X msg 1250 374 /rate \$1;
#X floatatom 1250 350 5 0 0 0 - - -;
#X msg 1217 308 /poll \$1;
#X obj 1217 278 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1
1 1;
#X floatatom 1227 437 5 0 0 0 - - -;
#X msg 1227 462 /size \$1;
#X floatatom 1087 480 5 0 0 0 - - -;
#X obj 1087 574 int;
#X floatatom 1087 638 5 0 0 0 - - -;
#X obj 1087 609 change;
#X text 1186 541 additional steps:;
#X obj 796 484 line;
#X obj 799 623 hsl 128 15 0 1023 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 6965 1;
#X text 856 479 <- use line to smooth out values;
#X text 1154 609 <- filter out redundant numbers;
#X text 1126 576 <- convert float to integer;
#X text 1246 274 <- turn on polling;
#X text 1303 347 <- set polling rate;
#X text 1280 433 <- size of window for averaging;
#X text 1553 338 example problem: analog sensor readings that don't
stabilize (jumpy potentiometer);
#X obj 1485 255 loadbang;
#X obj 1485 280 t b b;
#X msg 1485 306 100;
#X msg 1520 306 10;
#X msg 796 448 \$1 200;
#X floatatom 796 515 5 0 0 0 - - -;
#X obj 796 542 int;
#X floatatom 796 597 5 0 0 0 - - -;
#X obj 796 568 change;
#X text 846 565 <- filter out redundant numbers;
#X text 835 541 <- convert float to integer;
#X obj 1087 448 ps.mean mi1;
#X connect 0 0 76 0;
#X connect 2 0 76 0;
#X connect 3 0 4 0;
#X connect 4 0 76 0;
#X connect 6 0 5 0;
#X connect 6 1 5 1;
#X connect 6 1 10 0;
#X connect 9 0 42 0;
#X connect 11 0 9 0;
#X connect 12 0 13 0;
#X connect 14 0 16 0;
#X connect 15 0 14 0;
#X connect 16 0 17 0;
#X connect 16 1 18 0;
#X connect 19 0 25 0;
#X connect 20 0 21 0;
#X connect 21 0 31 0;
#X connect 22 0 19 0;
#X connect 22 1 32 0;
#X connect 22 2 36 0;
#X connect 24 0 62 0;
#X connect 26 0 76 0;
#X connect 28 0 37 0;
#X connect 29 0 33 0;
#X connect 30 0 20 0;
#X connect 31 0 24 0;
#X connect 31 1 19 1;
#X connect 32 0 25 0;
#X connect 33 0 34 0;
#X connect 34 0 35 0;
#X connect 35 0 24 0;
#X connect 35 1 32 1;
#X connect 36 0 25 0;
#X connect 37 0 38 0;
#X connect 38 0 39 0;
#X connect 39 0 24 0;
#X connect 39 1 36 1;
#X connect 42 0 43 0;
#X connect 46 0 47 0;
#X connect 49 0 48 0;
#X connect 51 0 50 0;
#X connect 53 0 52 0;
#X connect 54 0 44 0;
#X connect 55 0 45 0;
#X connect 59 0 56 0;
#X connect 60 0 57 0;
#X connect 61 0 58 0;
#X connect 62 0 22 0;
#X connect 63 0 64 0;
#X connect 64 0 65 0;
#X connect 64 1 66 0;
#X connect 64 2 67 0;
#X connect 64 3 68 0;
#X connect 65 0 108 0;
#X connect 65 0 101 0;
#X connect 69 0 70 0;
#X connect 69 1 71 0;
#X connect 69 2 72 0;
#X connect 69 3 73 0;
#X connect 74 0 69 0;
#X connect 75 0 76 0;
#X connect 76 0 6 0;
#X connect 77 0 108 1;
#X connect 78 0 77 0;
#X connect 79 0 108 1;
#X connect 80 0 79 0;
#X connect 81 0 82 0;
#X connect 82 0 108 1;
#X connect 83 0 84 0;
#X connect 84 0 86 0;
#X connect 86 0 85 0;
#X connect 88 0 102 0;
#X connect 97 0 98 0;
#X connect 98 0 99 0;
#X connect 98 1 100 0;
#X connect 99 0 78 0;
#X connect 100 0 81 0;
#X connect 101 0 88 0;
#X connect 102 0 103 0;
#X connect 103 0 105 0;
#X connect 104 0 89 0;
#X connect 105 0 104 0;
#X connect 108 0 83 0;
