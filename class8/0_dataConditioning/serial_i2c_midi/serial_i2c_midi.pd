#N canvas 395 70 1306 864 10;
#X msg 53 169 close;
#X obj 45 8 cnv 15 440 60 empty empty empty 20 12 0 14 -200075 -66577
0;
#X msg 44 142 devices;
#X obj 44 256 s;
#X obj 44 234 serial_print any;
#X text 46 88 Requires [comport] object \; install under Help > Find
Externals, f 72;
#X text 52 16 [serial_print]: abstraction that works with Arduinos'
Serial.print() and Serial.println() functions (with the use of [comport]).
It was written by Alexandros Drymonitis. \; See https://github.com/alexdrymonitis/Arduino_Pd
;
#X floatatom 268 221 5 0 0 0 - - -;
#X obj 268 148 r count:;
#X obj 478 155 r pressed:;
#X obj 478 204 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X floatatom 338 221 5 0 0 0 - - -;
#X obj 338 148 r difference:;
#X obj 430 301 select 1 -1;
#X obj 430 333 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 461 333 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 390 563 f;
#X floatatom 378 500 5 0 0 0 - - -;
#X obj 378 519 clip 0 255;
#X obj 82 525 t b b b;
#X text 376 481 out 2;
#X obj 82 459 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 250 597 s rgb;
#X obj 2 141 r rgb;
#X text 80 444 send rgb values;
#X obj 241 408 hsl 128 15 0 255 0 0 empty empty empty -2 -8 0 10 -258113
-1 -1 0 1;
#X obj 311 427 hsl 128 15 0 255 0 0 empty empty empty -2 -8 0 10 -4034
-1 -1 0 1;
#X obj 381 448 hsl 128 15 0 255 0 0 empty empty empty -2 -8 0 10 -4160
-1 -1 0 1;
#X obj 378 539 t b f;
#X obj 320 563 f;
#X floatatom 308 500 5 0 0 0 - - -;
#X obj 308 519 clip 0 255;
#X obj 308 539 t b f;
#X obj 250 563 f;
#X floatatom 238 500 5 0 0 0 - - -;
#X obj 238 519 clip 0 255;
#X obj 238 539 t b f;
#X text 306 481 out 1;
#X text 236 481 out 0;
#X obj 269 276 % 20;
#X floatatom 269 317 5 0 0 0 - - -;
#X floatatom 128 829 5 0 0 0 - - -;
#X floatatom 220 829 5 0 0 0 - - -;
#X obj 326 757 r button:;
#X floatatom 326 811 5 0 0 0 - - -;
#X floatatom 380 713 5 0 0 0 - - -;
#X obj 380 640 r proximity:;
#X floatatom 472 713 5 0 0 0 - - -;
#X obj 472 640 r ambientlight:;
#X floatatom 583 714 5 0 0 0 - - -;
#X obj 583 641 r whitelight:;
#X obj 128 756 r jx:;
#X obj 220 756 r jy:;
#X floatatom 89 714 5 0 0 0 - - -;
#X floatatom 181 714 5 0 0 0 - - -;
#X floatatom 292 715 5 0 0 0 - - -;
#X obj 90 641 r x:;
#X obj 181 641 r y:;
#X obj 292 642 r z:;
#X obj 82 492 bangfilter 100;
#X obj 44 212 comport 1 9600;
#X obj 620 196 ctlin 1;
#X floatatom 620 224 5 0 0 0 - - -;
#X floatatom 671 224 5 0 0 0 - - -;
#X floatatom 723 224 5 0 0 0 - - -;
#X floatatom 774 226 5 0 0 0 - - -;
#X obj 671 196 ctlin 2;
#X obj 723 196 ctlin 3;
#X obj 774 196 ctlin 4;
#X floatatom 574 111 5 0 0 0 - - -;
#X floatatom 636 110 5 0 0 0 - - -;
#X floatatom 701 109 5 0 0 0 - - -;
#X floatatom 774 112 5 0 0 0 - - -;
#X obj 574 83 ctlin 51;
#X obj 636 82 ctlin 52;
#X obj 701 81 ctlin 53;
#X obj 774 82 ctlin 54;
#X msg 104 169 open 1;
#X msg 1040 367 /rate \$1;
#X floatatom 1040 343 5 0 0 0 - - -;
#X msg 1007 301 /poll \$1;
#X obj 1007 271 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1
1 1;
#X floatatom 1017 430 5 0 0 0 - - -;
#X msg 1017 455 /size \$1;
#X floatatom 877 473 5 0 0 0 - - -;
#X obj 877 567 int;
#X floatatom 877 631 5 0 0 0 - - -;
#X obj 877 602 change;
#X text 976 534 additional steps:;
#X obj 610 363 line;
#X obj 613 502 hsl 128 15 0 127 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 7900 1;
#X text 670 358 <- use line to smooth out values;
#X text 944 602 <- filter out redundant numbers;
#X text 916 569 <- convert float to integer;
#X text 1036 267 <- turn on polling;
#X text 1093 340 <- set polling rate;
#X text 1070 426 <- size of window for averaging;
#X text 1343 331 example problem: analog sensor readings that don't
stabilize (jumpy potentiometer);
#X obj 1275 248 loadbang;
#X obj 1275 273 t b b;
#X msg 1275 299 100;
#X msg 1310 299 10;
#X msg 610 327 \$1 200;
#X floatatom 610 394 5 0 0 0 - - -;
#X obj 610 421 int;
#X floatatom 610 476 5 0 0 0 - - -;
#X obj 610 447 change;
#X text 660 444 <- filter out redundant numbers;
#X text 649 420 <- convert float to integer;
#X obj 877 441 ps.mean mi1;
#X connect 0 0 60 0;
#X connect 2 0 60 0;
#X connect 4 0 3 0;
#X connect 4 1 3 1;
#X connect 7 0 39 0;
#X connect 8 0 7 0;
#X connect 9 0 10 0;
#X connect 11 0 13 0;
#X connect 12 0 11 0;
#X connect 13 0 14 0;
#X connect 13 1 15 0;
#X connect 16 0 22 0;
#X connect 17 0 18 0;
#X connect 18 0 28 0;
#X connect 19 0 16 0;
#X connect 19 1 29 0;
#X connect 19 2 33 0;
#X connect 21 0 59 0;
#X connect 23 0 60 0;
#X connect 25 0 34 0;
#X connect 26 0 30 0;
#X connect 27 0 17 0;
#X connect 28 0 21 0;
#X connect 28 1 16 1;
#X connect 29 0 22 0;
#X connect 30 0 31 0;
#X connect 31 0 32 0;
#X connect 32 0 21 0;
#X connect 32 1 29 1;
#X connect 33 0 22 0;
#X connect 34 0 35 0;
#X connect 35 0 36 0;
#X connect 36 0 21 0;
#X connect 36 1 33 1;
#X connect 39 0 40 0;
#X connect 43 0 44 0;
#X connect 46 0 45 0;
#X connect 48 0 47 0;
#X connect 50 0 49 0;
#X connect 51 0 41 0;
#X connect 52 0 42 0;
#X connect 56 0 53 0;
#X connect 57 0 54 0;
#X connect 58 0 55 0;
#X connect 59 0 19 0;
#X connect 60 0 4 0;
#X connect 61 0 62 0;
#X connect 62 0 102 0;
#X connect 62 0 109 0;
#X connect 66 0 63 0;
#X connect 67 0 64 0;
#X connect 68 0 65 0;
#X connect 73 0 69 0;
#X connect 74 0 70 0;
#X connect 75 0 71 0;
#X connect 76 0 72 0;
#X connect 77 0 60 0;
#X connect 78 0 109 1;
#X connect 79 0 78 0;
#X connect 80 0 109 1;
#X connect 81 0 80 0;
#X connect 82 0 83 0;
#X connect 83 0 109 1;
#X connect 84 0 85 0;
#X connect 85 0 87 0;
#X connect 87 0 86 0;
#X connect 89 0 103 0;
#X connect 98 0 99 0;
#X connect 99 0 100 0;
#X connect 99 1 101 0;
#X connect 100 0 79 0;
#X connect 101 0 82 0;
#X connect 102 0 89 0;
#X connect 103 0 104 0;
#X connect 104 0 106 0;
#X connect 105 0 90 0;
#X connect 106 0 105 0;
#X connect 109 0 84 0;
